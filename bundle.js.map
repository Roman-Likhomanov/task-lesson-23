{"version":3,"file":"bundle.js","mappings":"YAoCA,IAnCQA,EACFC,EACAC,EAEEC,EAKAC,EAMAC,EAoBFC,EACJ,SAACC,GAAD,OACA,WAAa,2BAATC,EAAS,yBAATA,EAAS,gBACXC,QAAQC,KAAR,UAAgBH,EAAhB,iBAAgCI,KAAKC,UAAUJ,KAC/CK,SAASC,eAAe,QAAQC,UAAhC,cAAmDR,EAAnD,WAGES,GA1CEhB,EAAsB,GACxBC,EAAcgB,SAASC,SACvBhB,EAAoB,KAElBC,EAAU,SAACgB,EAAYC,GAAb,OACbD,aAAiBE,QAAUF,EAAMG,KAAKF,IACrB,mBAAVD,GAAwBA,EAAMC,IACpB,iBAAVD,GAAsBA,IAAUC,GAEpChB,EAAiB,SAAC,GAAgC,IAA9Be,EAA8B,EAA9BA,MAAOI,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAClChB,EAAO,CAAEP,YAAAA,EAAaC,aAAAA,EAAcuB,MAAOC,QAAQD,OACzDtB,EAAQgB,EAAOlB,IAAgBsB,EAAQf,GACvCgB,GAAWrB,EAAQgB,EAAOjB,IAAiBsB,KAGvCnB,EAAqB,kBAAML,EAAU2B,QAAQvB,IAenDwB,OAAOC,iBAAiB,WAAYxB,GAE7B,CAAEyB,GAfE,SAACX,EAAOI,EAASC,GAC1B,IAAMO,EAAW,CAAEZ,MAAAA,EAAOI,QAAAA,EAASC,QAAAA,GACnCxB,EAAUgC,KAAKD,GACf3B,EAAe2B,IAYJE,GATF,SAACC,EAAKT,GACfvB,EAAeD,EACfyB,QAAQS,UAAUV,EAAOS,EAAKA,GAC9BjC,EAAcgB,SAASC,SACvBb,OAiBJW,EAAOc,GAAG,KAAMxB,EAAa,QAC7BU,EAAOc,IACL,SAACV,GAAD,MAAmB,cAATA,IACVd,EAAa,aACbA,EAAa,wBAEfU,EAAOc,GAAG,SAAUxB,EAAa,WACjCU,EAAOc,GAAG,YAAaxB,EAAa,cAEpCO,SAASuB,KAAKP,iBAAiB,SAAS,SAACQ,GACvC,GAAKA,EAAMC,OAAOC,QAAQ,KAA1B,CAGAF,EAAMG,iBACN,IAAMN,EAAMG,EAAMC,OAAOG,aAAa,QACtCzB,EAAOiB,GAAGC,O","sources":["webpack://task-lesson-34/./src/router.ts"],"sourcesContent":["function Router() {\n  const listeners: object[] = [];\n  let currentPath = location.pathname;\n  let previousPath: any = null;\n\n  const isMatch = (match: any, path: any) =>\n    (match instanceof RegExp && match.test(path)) ||\n    (typeof match === \"function\" && match(path)) ||\n    (typeof match === \"string\" && match === path);\n\n  const handleListener = ({ match, onEnter, onLeave }) => {\n    const args = { currentPath, previousPath, state: history.state };\n    isMatch(match, currentPath) && onEnter(args);\n    onLeave && isMatch(match, previousPath) && onLeave();\n  };\n\n  const handleAllListeners = () => listeners.forEach(handleListener);\n\n  const on = (match, onEnter, onLeave) => {\n    const listener = { match, onEnter, onLeave };\n    listeners.push(listener);\n    handleListener(listener);\n  };\n\n  const go = (url, state) => {\n    previousPath = currentPath;\n    history.pushState(state, url, url);\n    currentPath = location.pathname;\n    handleAllListeners();\n  };\n\n  window.addEventListener(\"popstate\", handleAllListeners);\n\n  return { on, go };\n}\n\nconst createRender =\n  (content) =>\n  (...args) => {\n    console.info(`${content} args=${JSON.stringify(args)}`);\n    document.getElementById(\"root\").innerHTML = `<h2>${content}</h2>`;\n  };\n\nconst router = Router();\n\nrouter.on(/.*/, createRender(\"/.*\"));\nrouter.on(\n  (path) => path === \"/contacts\",\n  createRender(\"/contacts\"),\n  createRender(\"[leaving] /contacts\")\n);\nrouter.on(\"/about\", createRender(\"/about\"));\nrouter.on(\"/about/us\", createRender(\"/about/us\"));\n\ndocument.body.addEventListener(\"click\", (event) => {\n  if (!event.target.matches(\"a\")) {\n    return;\n  }\n  event.preventDefault();\n  const url = event.target.getAttribute(\"href\");\n  router.go(url);\n});\n"],"names":["listeners","currentPath","previousPath","isMatch","handleListener","handleAllListeners","createRender","content","args","console","info","JSON","stringify","document","getElementById","innerHTML","router","location","pathname","match","path","RegExp","test","onEnter","onLeave","state","history","forEach","window","addEventListener","on","listener","push","go","url","pushState","body","event","target","matches","preventDefault","getAttribute"],"sourceRoot":""}